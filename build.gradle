// In this section you declare where to find the dependencies of your project
allprojects {
    group = 'org.victoryw'
    version = '0.1.0'

    apply plugin: 'eclipse'
    apply plugin: 'idea'
    apply plugin: 'checkstyle'
    apply plugin: 'jacoco'

    task wrapper(type: Wrapper) {
        gradleVersion = '2.12'
    }

    checkstyle {
    	configFile = rootProject.file('checkstyle.xml')
        toolVersion ="7.0"
    }

    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
    }

}


buildscript {
    ext {
        springBootVersion = '1.4.2.RELEASE'
    }

    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}


subprojects {
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'application'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    repositories {
        jcenter()
    }
    dependencies {

        // Start: Spring Boot Web
        compile('org.springframework.boot:spring-boot-starter-web')
        // End: Spring Boot Web
        

        //Start: Spring data jpa and H2 memory db
        compile("org.springframework.boot:spring-boot-starter-data-jpa")

        compile 'mysql:mysql-connector-java'
        //End: Spring data jpa and H2 memory db

        //Start: Pact
	    testCompile 'au.com.dius:pact-jvm-consumer-junit_2.11:3.5.0-beta.2'
        testCompile 'au.com.dius:pact-jvm-provider-junit_2.11:3.5.0-beta.2'
        //End: Pact

        testCompile("org.springframework.boot:spring-boot-starter-test")
        testCompile("com.h2database:h2")
        // Start: JUnit
        testCompile 'junit:junit:4.12'
        // End: JUnit


    }
}

project(':consumer') {
    mainClassName = 'org.victoryw.ConsumerMain'
}

task codeCoverageReport(type: JacocoReport) {
    executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")

    subprojects.each {
        sourceSets it.sourceSets.main
    }

    reports {
        xml.enabled true
        xml.destination "${buildDir}/reports/jacoco/report.xml"
        html.enabled false
        csv.enabled false
    }
}

codeCoverageReport.dependsOn {
    subprojects*.test
}
